apply plugin: 'com.android.application'
//这是模块级的build.gradle
android {
    //指定编译用的SDK版本号  ,如28表示使用Android 9.0编译,30则是Android10  可以避免使用过期的API,越高就可以使用越新的api
    compileSdkVersion 30
    //指定编译工具的版本号,其头两位数字必须与compileSdkVersion保持一致,具体的版本号可在sdk安装目录的sdk\build-tools下找到
    buildToolsVersion "30.0.2"

    defaultConfig {
        //指定该模块的应用编号,即APP的包名.该参数为自动生成,无需修改
        applicationId "com.baidu.duer.dcs"
        //指定App适合运行的最小SDK版本号,如16表示至少在Android4.1上运行
        minSdkVersion 15
        //指定目标设备的SDK版本号,即该App最希望在哪个版本的Android上运行
        targetSdkVersion 30
        //指定App的应用版本号
        versionCode 1
        //指定App的应用版本名称
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions -I/src/main/cpp"
            }
        }
        ndk {
            // 平台
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
    }

//    compileOptions {
//
//        sourceCompatibility JavaVersion.VERSION_1_8
//
//        targetCompatibility JavaVersion.VERSION_1_8
//
//    }

    externalNativeBuild {
        cmake {
//            path "CMakeLists.txt"
            version "3.6.4111459"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    buildTypes {
        release {
            //指定是否开启代码混淆功能,true表示开启,false则表示无需混淆
            minifyEnabled false
            //指定代码混淆规则文件的文件名
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }

    configurations {
        all*.exclude group: 'com.squareup.okio'
        all*.exclude group: 'com.android.support', module: 'supprot-v13'
//        all*.exclude group:'com.google.android', module: 'support-v4'
    }

}

dependencies {
    //指定引用jar包的路径
    implementation fileTree(dir: "libs", include: ["*.jar"])
//    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //指定编译Android的高版本支持库,如AppCompatActicity必须指定编译appcompat-v7库
    implementation 'com.android.support:appcompat-v7:25.3.0'
    implementation 'com.android.support:design:25.3.0'
//    implementation 'com.android.support:support-v4:27.1.1'
    //指定单元测试编译用的junit版本号
    testImplementation 'junit:junit:4.12'

//    implementation 'com.jakewharton:butterknife:9.0.0'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0'

    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.ryan.rv_gallery:rv-gallery:1.1.2'

    implementation files('libs/jackson-core-asl-1.9.13.jar')
    implementation files('libs/jackson-mapper-asl-1.9.13.jar')
    implementation files('libs/commons-fileupload-1.3.2.jar')
    implementation files('libs/commons-lang3-3.4.jar')
    implementation files('libs/commons-io-2.5.jar')
    //implementation files('libs/okhttp-3.8.1.jar')
    // compile 'com.squareup.okio:okio:1.13.0'
    implementation 'javazoom:jlayer:1.0.1'
    implementation files('libs/okio-1.14.0.jar')

//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}